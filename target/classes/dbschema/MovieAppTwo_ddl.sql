-- ###########################################
-- # Drop
-- ###########################################
-- Drop index

-- Drop many to many relations

-- Drop normal entities
DROP TABLE MOVIEREVENUE CASCADE;
DROP TABLE MOVIEACTOR CASCADE;
DROP TABLE MOVIE CASCADE;
DROP TABLE DIRECTOR CASCADE;
DROP TABLE ACTOR CASCADE;

-- Drop pk sequence
DROP SEQUENCE hibernate_sequence;

-- ###########################################
-- # Create
-- ###########################################
-- Create pk sequence
CREATE SEQUENCE hibernate_sequence;

-- Create normal entities
CREATE TABLE ACTOR (
	ID BIGINT NOT NULL,
	FIRSTNAME VARCHAR(100) NOT NULL,
	LASTNAME VARCHAR(100) NOT NULL,
	DATEOFBIRTH TIMESTAMP NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	GENDER VARCHAR(1),
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL
);

CREATE TABLE DIRECTOR (
	ID BIGINT NOT NULL,
	FIRSTNAME VARCHAR(100) NOT NULL,
	LASTNAME VARCHAR(100) NOT NULL,
	DATEOFBIRTH TIMESTAMP NOT NULL,
	NATIONALITY VARCHAR(100) NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL
);

CREATE TABLE MOVIE (
	ID BIGINT NOT NULL,
	MOVIENAME VARCHAR(100) NOT NULL,
	MOVIELENGTH INTEGER NOT NULL,
	MOVIELANG VARCHAR(100) NOT NULL,
	RELEASEDATE TIMESTAMP NOT NULL,
	AGECERTIFICATE VARCHAR(100) NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	DIRECTOR BIGINT NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL
);

CREATE TABLE MOVIEACTOR (
	ID BIGINT NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	MOVIE BIGINT NOT NULL,
	ACTOR BIGINT NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL
);

CREATE TABLE MOVIEREVENUE (
	ID BIGINT NOT NULL,
	DOMESTICTAKINGS INTEGER NOT NULL,
	INTERNATIONALTAKINGS INTEGER NOT NULL,
	UUID VARCHAR(36) NOT NULL,
	MOVIE BIGINT NOT NULL,
	CREATEDDATE TIMESTAMP,
	CREATEDBY VARCHAR(50),
	LASTUPDATED TIMESTAMP,
	LASTUPDATEDBY VARCHAR(50),
	VERSION BIGINT NOT NULL
);


-- Create many to many relations

-- Primary keys
ALTER TABLE ACTOR ADD CONSTRAINT PK_ACTOR
	PRIMARY KEY (ID);
ALTER TABLE DIRECTOR ADD CONSTRAINT PK_DIRECTOR
	PRIMARY KEY (ID);
ALTER TABLE MOVIE ADD CONSTRAINT PK_MOVIE
	PRIMARY KEY (ID);
ALTER TABLE MOVIEACTOR ADD CONSTRAINT PK_MOVIEACTOR
	PRIMARY KEY (ID);
ALTER TABLE MOVIEREVENUE ADD CONSTRAINT PK_MOVIEREVENUE
	PRIMARY KEY (ID);

-- Unique constraints
ALTER TABLE ACTOR
	ADD CONSTRAINT UQ_ACTOR UNIQUE (UUID);
ALTER TABLE DIRECTOR
	ADD CONSTRAINT UQ_DIRECTOR UNIQUE (UUID);
ALTER TABLE MOVIE
	ADD CONSTRAINT UQ_MOVIE UNIQUE (UUID);
ALTER TABLE MOVIEACTOR
	ADD CONSTRAINT UQ_MOVIEACTOR UNIQUE (UUID);
ALTER TABLE MOVIEREVENUE
	ADD CONSTRAINT UQ_MOVIEREVENUE UNIQUE (UUID);

-- Foreign key constraints


-- Reference from Movie.director to Director
ALTER TABLE MOVIE ADD CONSTRAINT FK_MOVIE_DIRECTOR
	FOREIGN KEY (DIRECTOR) REFERENCES DIRECTOR (ID);
CREATE INDEX IX_MOVIE_DIRECTOR ON MOVIE (DIRECTOR);

-- Reference from MovieActor.movie to Movie
ALTER TABLE MOVIEACTOR ADD CONSTRAINT FK_MOVIEACTOR_MOVIE
	FOREIGN KEY (MOVIE) REFERENCES MOVIE (ID);
CREATE INDEX IX_MOVIEACTOR_MOVIE ON MOVIEACTOR (MOVIE);

-- Reference from MovieActor.actor to Actor
ALTER TABLE MOVIEACTOR ADD CONSTRAINT FK_MOVIEACTOR_ACTOR
	FOREIGN KEY (ACTOR) REFERENCES ACTOR (ID);
CREATE INDEX IX_MOVIEACTOR_ACTOR ON MOVIEACTOR (ACTOR);

-- Reference from MovieRevenue.movie to Movie
ALTER TABLE MOVIEREVENUE ADD CONSTRAINT FK_MOVIEREVENUE_MOVIE
	FOREIGN KEY (MOVIE) REFERENCES MOVIE (ID);
CREATE INDEX IX_MOVIEREVENUE_MOVIE ON MOVIEREVENUE (MOVIE);

-- Index
